{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to transform AMF LD model into a form view model.\n\nNote, this element does not include polyfills for `Promise` and `Array.from`.\n\nThe model should be used to build a form view for request parameters\nlike header, query parameters, uri parameters or the body.\n\n### Data model\n- binding {String} - one of `path`, `query`, `header`\n- name {String} - property (form) name\n- required {Boolean} - is property required\n- value {any} - Value of the property\n- description {String} - The description of the property\n- hasDescription {Boolean} - Flag describing if the property has a\ndescription.\n- properties {Array<Object>} - If the model is a type of object it is a list\nof this model objects.\n- schema {Object} - Property schma information\n- schema.type {String} - Data type of the property\n- schema.inputLabel {String} Label for the form control\n- schema.inputType {String} - type attribute of the `input` element.\n- schema.pattern {String} - Regex pattern of the property\n- schema.minLength {Number} - String property minimum length\n- schema.maxLength {Number} - String property maximum length\n- schema.defaultValue {any} - Default value of the property\n- schema.examples {Array<Object>} - List of examples for the form property.\n- schema.multipleOf {Number} - For numeric values, a `step` attribute of\nthe `input` element.\nEach object may contain `name` (may be undefined) and must contain `value`\nproperty of the example.\n- schema.minimum {Number} - For numeric values, minimum value of the property\n- schema.maximum {Number} - For numeric values, maximum value of the property\n- schema.isEnum {Boolean} - Flag describing enumerable value\n- schema.enum {Array<any>} - Only if `schema.isEnum` is set. Values for enum\ninput.\n- schema.isArray {Boolean} - Flag describing array value for the property\n- schema.items {Object} - Lsit of items definitions\n- schema.isBool {Boolean} - Flag describing boolean value for the property\n- schema.isFile {Boolean} - Flag describing File value for the property\n- schema.isObject {Boolean} - Flag describing Object value for the property\n- schema.isNillable {Boolean} - True when it is an union and one of union\nitems is nil.\n- schema.inputPlaceholder {?String} - A placeholder value for the input.\n- schema.inputFloatLabel {Boolean} - Only if placeholder is set. Instructs\ninput control to float a label.\n- schema.isUnion {Boolean} - Flag describing union value\n- schema.anyOf {Array<Object>} - List of possible types of the union.\n- schema.enabled {Boolean} - Always `true`\n- schema.fileTypes {Array<String>} List of file types defined for a file\ntype.\n- schema.readOnly {Boolean} - Nil types gets `readOnly` property\n## Example\n\n```html\n<api-view-model-transformer on-view-model-changed=\"_updateView\"></api-view-model-transformer>\n<script>\nconst amfModel = getAmfFromRamlOrOas();\nconst processor = document.querySelector('api-view-model-transformer');\nprocessor.amfModel = amfModel;\nprocessor.shape = extractHeadersForMethod(amfModel);\nprocessor.addEventListener('view-model-changed', (e) => {\n console.log(e.detail.value);\n});\n< /script>\n```\n\nThis example uses `getAmfFromRamlOrOas()` function where you implement\nthe logic of getting AMF json/ld data. It can be stored in file or parsed\nusing AMF parsers. The `extractHeadersForMethod()` represents a logic to\nextract properties that you want to transform. It can be headers, query\nparameters or body type.\n\n## JSON ld context\n\nJSON schema may contain `@context` property. It can be used to reduce size\nof the schema by replacing namespace ids with defined in `@context` keywords.\nThis transformer does not consume whole AMF model, but only the portion that\nshould be transformed. Because of that the tranformer is missing context\nfor namespace resolving. Set `@context` value of the model to `amfContext`\nproperty so it can be expanded to the canonical form.\n**Tranformation won't work properly if namespace name are altered by context\nand `amfContext` property is not set.**",
      "summary": "",
      "path": "api-view-model-transformer.js",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only used to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 130,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_exampleGenerator",
          "type": "Element",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "shape",
          "type": "Array | null | undefined",
          "description": "An array of propertues for which view model is to be generated.\nIt accepts model for headers, query parameters, uri parameters and\nbody.\nIf `manualModel` is not set, assigning a value to this property will\ntrigger model computation. Otherwise call `computeViewModel()`\nfunction manually to generate the model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_shapeChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "viewModel",
          "type": "Array.<Object>",
          "description": "Generated view model from the `shape`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "manualModel",
          "type": "boolean | null | undefined",
          "description": "If set, assigning a value to `shape` will not trigger view model\ncomputation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_references",
          "type": "Array | null | undefined",
          "description": "The declarations model computed from the AMF object. It is used when the\ntransformer attempt to transform link value.\n\nIf this property is not set then it dispatches `amf-resolve-link`\ncustom event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "Makes the model to always have `hasDescription` to false and\nclears and documentation from ther model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 249,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 139,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 188,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 231,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 238,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 305,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "Computes API version from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel",
              "type": "(Object | Array.<Object>)"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 449,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 456,
              "column": 4
            },
            "end": {
              "line": 469,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 476,
              "column": 4
            },
            "end": {
              "line": 484,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 491,
              "column": 4
            },
            "end": {
              "line": 499,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 509,
              "column": 4
            },
            "end": {
              "line": 521,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 531,
              "column": 4
            },
            "end": {
              "line": 542,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 556,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 568,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 589,
              "column": 4
            },
            "end": {
              "line": 595,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 602,
              "column": 4
            },
            "end": {
              "line": 610,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 618,
              "column": 4
            },
            "end": {
              "line": 639,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 645,
              "column": 4
            },
            "end": {
              "line": 651,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 659,
              "column": 4
            },
            "end": {
              "line": 665,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 673,
              "column": 4
            },
            "end": {
              "line": 687,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 695,
              "column": 4
            },
            "end": {
              "line": 701,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 708,
              "column": 4
            },
            "end": {
              "line": 715,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 722,
              "column": 4
            },
            "end": {
              "line": 746,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 755,
              "column": 4
            },
            "end": {
              "line": 762,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 771,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 795,
              "column": 4
            },
            "end": {
              "line": 810,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 831,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 845,
              "column": 4
            },
            "end": {
              "line": 894,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 918,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 937,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 950,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 959,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 979,
              "column": 4
            },
            "end": {
              "line": 1000,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 1006,
              "column": 4
            },
            "end": {
              "line": 1032,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "clearCache",
          "description": "Clears cache for computed models.\nAll computed models are kept in in-memory cache to another call for computation\nof the same model will result with reference to already computed value.\nThis function clears all cached objects.\n\nNote, the memory won't be freed for objects that are in use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_shapeChanged",
          "description": "Called when either `shape` or `manualModel` propeties changed.\nIf `manualModel` is falsy then it calls `computeViewModel()` function.\n\nNote, this function won't be called when sub property of the model\nchange. For peformance rerasons it won't be supported.\n\nNote, `computeViewModel` is called asynchronusly so `amfContext`\nproperty can be set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Array",
              "description": "Model for shape"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "computeViewModel",
          "description": "Computes view model from AMF data model. This should not be called if\n`manualModel` is not set. Use `shape` property instead.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 2
            },
            "end": {
              "line": 314,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "(?Array | Object)",
              "description": "AMF type model. If not set it uses `shape`\nproperty of the element."
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "A promise resolved to generated model."
          }
        },
        {
          "name": "_computeViewModel",
          "description": "Conputes model for each item recursively. It allows browser to return\nthe event loop and prohibit ANR to show.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 2
            },
            "end": {
              "line": 353,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "List of remanding AMF model items.\nThis shuld be copy of the model since this function removes items from\nthe list."
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "Promise resolved to the view model."
          }
        },
        {
          "name": "uiModelForAmfItem",
          "description": "Creates a UI model item from AMF json/ld model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 367,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfItem",
              "type": "Object",
              "description": "AMF model with schema for\n`http://raml.org/vocabularies/http#Parameter`"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "UI data model."
          }
        },
        {
          "name": "_uiModelForParameter",
          "description": "Creates a UI model item from AMF json/ld model for a parameter.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 439,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfItem",
              "type": "Object",
              "description": "AMF model with schema for\n`http://raml.org/vocabularies/http#Parameter`"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "UI data model."
          }
        },
        {
          "name": "_uiModelForPropertyShape",
          "description": "Creates a UI model item from AMF json/ld model for a parameter.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 2
            },
            "end": {
              "line": 534,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfItem",
              "type": "Object",
              "description": "AMF model with schema for\n`http://raml.org/vocabularies/http#Parameter`"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "UI data model."
          }
        },
        {
          "name": "modelForRawObject",
          "description": "Creates a view model for an object definition. Object definition can be\npart of trait or annotation properties description.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to extract data from."
            },
            {
              "name": "processOptions",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "View model for items."
          }
        },
        {
          "name": "_uiModelForRawObject",
          "description": "Creates a view model from \"raw\" item (model before resolving).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 2
            },
            "end": {
              "line": 646,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "String",
              "description": "Key of the item in the model."
            },
            {
              "name": "model",
              "type": "String",
              "description": "Item model"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "View model"
          }
        },
        {
          "name": "_processAfterItemCreated",
          "description": "Sets up additional properties like `value` or placeholder from\nvalues read from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Computed UI model."
            },
            {
              "name": "processOptions",
              "type": "Object",
              "description": "Model creation options"
            }
          ],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "_completeInputLabel",
          "description": "Completes computation of input label.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 715,
              "column": 2
            },
            "end": {
              "line": 723,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayName",
              "type": "?String",
              "description": "Value of the `displayName` property"
            },
            {
              "name": "name",
              "type": "String",
              "description": "Property name"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "Is item required"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Common input label construction."
          }
        },
        {
          "name": "_computeRawExamples",
          "description": "Computes list of examples from the Raw data model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 729,
              "column": 2
            },
            "end": {
              "line": 752,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          }
        },
        {
          "name": "_computeBinding",
          "description": "Computes value of the `binding` property of the UI model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 758,
              "column": 2
            },
            "end": {
              "line": 761,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF item model"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Binding property or undefined if not found."
          }
        },
        {
          "name": "_computeFormName",
          "description": "Computes fomm (parameter) name from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 767,
              "column": 2
            },
            "end": {
              "line": 770,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF item model"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Name property or undefined if not found."
          }
        },
        {
          "name": "_computeRequired",
          "description": "Computes `required` property from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 776,
              "column": 2
            },
            "end": {
              "line": 779,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF item model"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the property is required."
          }
        },
        {
          "name": "_computeRequiredPropertyShape",
          "description": "Computes `minCount` property from AMF model for PropertyShape object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 786,
              "column": 2
            },
            "end": {
              "line": 790,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF item model"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if `minCount` equals `1`"
          }
        },
        {
          "name": "_computeModelType",
          "description": "Computes type of the model. It's RAML data type property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 796,
              "column": 2
            },
            "end": {
              "line": 882,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Property schema."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Type of the nproperty."
          }
        },
        {
          "name": "_computeRawModelValue",
          "description": "Computes type of the raw model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 889,
              "column": 2
            },
            "end": {
              "line": 908,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property schema."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Type of the nproperty."
          }
        },
        {
          "name": "_computeRawScalarValue",
          "description": "Computes scalar value that has proper type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 914,
              "column": 2
            },
            "end": {
              "line": 941,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Shape to test for a value."
            }
          ],
          "return": {
            "type": "(String | Number | Boolean)"
          }
        },
        {
          "name": "_computeRawArrayValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 943,
              "column": 2
            },
            "end": {
              "line": 957,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_computeInputLabel",
          "description": "Computes form input label value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 966,
              "column": 2
            },
            "end": {
              "line": 969,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def",
              "type": "Object",
              "description": "Property definition"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "True if the property is required"
            },
            {
              "name": "name",
              "type": "?String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Input display name."
          }
        },
        {
          "name": "_computeShaclProperty",
          "description": "Computes the value of a property that namespace starts with\n`http://www.w3.org/ns/shacl`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 978,
              "column": 2
            },
            "end": {
              "line": 981,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Property AMF definition"
            },
            {
              "name": "property",
              "type": "String",
              "description": "Name of the schema."
            }
          ],
          "return": {
            "type": "(any | undefined)",
            "desc": "Value of the property or undefined if not set."
          }
        },
        {
          "name": "_computeVocabularyShapeProperty",
          "description": "Computes the value of a property that namespace starts with\n`http://raml.org/vocabularies/shapes`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 990,
              "column": 2
            },
            "end": {
              "line": 993,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Property AMF definition"
            },
            {
              "name": "property",
              "type": "String",
              "description": "Name of the schema."
            }
          ],
          "return": {
            "type": "(any | undefined)",
            "desc": "Value of the property or undefined if not set."
          }
        },
        {
          "name": "_computeDefaultValue",
          "description": "Computes default value for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 999,
              "column": 2
            },
            "end": {
              "line": 1050,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Amf shape"
            }
          ],
          "return": {
            "type": "(any | undefined)",
            "desc": "Default value for the model or undefined."
          }
        },
        {
          "name": "_computeModelEnum",
          "description": "Computes enum values for the view model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1056,
              "column": 2
            },
            "end": {
              "line": 1083,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def",
              "type": "Object",
              "description": "Model definition."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of values."
          }
        },
        {
          "name": "_computeModelExamples",
          "description": "Computes list of examples for the Property model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1092,
              "column": 2
            },
            "end": {
              "line": 1096,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF property model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of examples or `undefined` if not\ndefined."
          }
        },
        {
          "name": "_computeModelItems",
          "description": "Computes `items` property for AMF array property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1103,
              "column": 2
            },
            "end": {
              "line": 1121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF property model"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Array definition model"
          }
        },
        {
          "name": "_computeValueDelimiter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1123,
              "column": 2
            },
            "end": {
              "line": 1129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "binding"
            }
          ]
        },
        {
          "name": "_computeDecodeValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1131,
              "column": 2
            },
            "end": {
              "line": 1136,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "binding"
            }
          ]
        },
        {
          "name": "_exampleAsValue",
          "description": "Parses a string from example or enum value to be used as default value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1146,
              "column": 2
            },
            "end": {
              "line": 1160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "example",
              "type": "String",
              "description": "Example value to process as a value"
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Options:\n- name {String} Processed property name\n- valueDelimiter {?String} either `:` for headers or `=` for query params\n- decodeValues {Boolean} True to url decode value."
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        },
        {
          "name": "__parseArrayExample",
          "description": "Parses example in an array type.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1171,
              "column": 2
            },
            "end": {
              "line": 1186,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "example",
              "type": "String",
              "description": "An array example"
            },
            {
              "name": "processOptions",
              "type": "Object",
              "description": "Options:\n- name {String} Processed property name\n- valueDelimiter {?String} either `:` for headers or `=` for query params\n- decodeValues {Boolean} True to url decode value."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Array of examples or string if cannot parse"
          }
        },
        {
          "name": "_computeModelInputType",
          "description": "Computes rendered item input field type based on RAML definition.\n\nIt will be either numeric or text. Type will be determined from\nitem's type or, in case of array, item's items property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1198,
              "column": 2
            },
            "end": {
              "line": 1209,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Property data type."
            },
            {
              "name": "items",
              "type": "?Array",
              "description": "Array items if any"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Input field type."
          }
        },
        {
          "name": "__computeInputType",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1211,
              "column": 2
            },
            "end": {
              "line": 1222,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_computeModelPattern",
          "description": "Computes pattern for the input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1232,
              "column": 2
            },
            "end": {
              "line": 1254,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "modelType",
              "type": "String",
              "description": "Type of the property item."
            },
            {
              "name": "pattern",
              "type": "String",
              "description": "Pattern declared on the property"
            },
            {
              "name": "format",
              "type": "?String",
              "description": "For `datetime` type additional format value.\n`rfc3339` is assumed by default"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Pattern or undefined if does not exists."
          }
        },
        {
          "name": "_computeTypePlaceholder",
          "description": "Computes a placeholder value for data and time inputs.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1263,
              "column": 2
            },
            "end": {
              "line": 1284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Model type."
            },
            {
              "name": "format",
              "type": "?String",
              "description": "For `datetime` type additional format value.\n`rfc3339` is assumed by default"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Placeholder value."
          }
        },
        {
          "name": "_buildPropertyHandler",
          "description": "Handler for the `api-property-model-build` custom event.\nBuilds a property view model using event detail object as a base object.\n\nAll changes are applied to the `detail` object. Requesting element must\nuse the same object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1294,
              "column": 2
            },
            "end": {
              "line": 1301,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "buildProperty",
          "description": "Builds empty view model without traversing AMF model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1309,
              "column": 2
            },
            "end": {
              "line": 1333,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "defaults",
              "type": "?Object",
              "description": "View model with default values. This values won't\nbe set."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Generated basic view model."
          }
        },
        {
          "name": "_computeHasExtendedDocumentation",
          "description": "Computes if model item has documentation to display.\nThis would be extended documentation by adding additional description\nproperties that helps the user to input values into the editor.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1343,
              "column": 2
            },
            "end": {
              "line": 1358,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Model item"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if documentation can be rendered."
          }
        },
        {
          "name": "_computeExtendedDocumentation",
          "description": "Computes documentation as a markdown to be placed in the `marked-element`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1364,
              "column": 2
            },
            "end": {
              "line": 1389,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "View model"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated documentation"
          }
        },
        {
          "name": "_computeIsNillable",
          "description": "Returns `true` only when passed shape has `shapes#anyOf` array and\none of the union properties is of a type od NilShape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1396,
              "column": 2
            },
            "end": {
              "line": 1411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Schape test for nillable union."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 170,
          "column": 7
        },
        "end": {
          "line": 1412,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiViewModelTransformer",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../@advanced-rest-client/events-target-mixin/events-target-mixin.js",
            "start": {
              "line": 64,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "EventsTargetMixin"
        },
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only used to resolve references.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 22
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../@api-components/amf-helper-mixin/amf-helper-mixin.js",
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 130,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "shape",
          "description": "An array of propertues for which view model is to be generated.\nIt accepts model for headers, query parameters, uri parameters and\nbody.\nIf `manualModel` is not set, assigning a value to this property will\ntrigger model computation. Otherwise call `computeViewModel()`\nfunction manually to generate the model.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "view-model",
          "description": "Generated view model from the `shape`",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "manual-model",
          "description": "If set, assigning a value to `shape` will not trigger view model\ncomputation.",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-docs",
          "description": "Makes the model to always have `hasDescription` to false and\nclears and documentation from ther model.",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "view-model-changed",
          "description": "Fired when the `viewModel` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-view-model-transformer",
      "mixins": [
        "EventsTargetMixin",
        "AmfHelperMixin"
      ]
    }
  ]
}
